---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  become: true
  become_method: sudo
  become_user: root  
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
  tasks:
    - name: "install python for Ansible."
      apt:
        name: python3
        state: latest
        update_cache: true
      environment:
        - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
        - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
        - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
        - TYPEORM_PORT: 5432
        - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
        - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
        - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
        - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
        - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"

#- name: set environment demo
#  hosts: all
#  gather_facts: false
#  become: true
#  vars:
#    os_environment:
#      - key: EDITOR
#        value: vi
#      - key: MY_ENV_VARIABLE
#        value: ansiblepilot
#  tasks:
#    - name: customize /etc/environment
#      ansible.builtin.lineinfile:
#        dest: "/etc/environment"
#        state: present
#        regexp: "^{{ item.key }}="
#        line: "{{ item.key }}={{ item.value }}"
#      with_items: "{{ os_environment }}"

  roles:
    - configure-server

